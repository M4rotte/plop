#!/usr/bin/env bash

[ -n "$1" -a -n "$2"    ] || { printf "Usage: $0 <action> <daemon>\n" 1>&2 && exit 1; }
[ -x "$(which gdb)"     ] || { printf "gdb not found in $PATH\n" 1>&2 && exit 2; }
[ -x "$(which setsid)"  ] || { printf "setsid not found in $PATH\n" 1>&2 && exit 3; }
[ -n "$XDG_RUNTIME_DIR" ] || XDG_RUNTIME_DIR='/tmp'

NAME=$(basename $2)

RUNDIR="$XDG_RUNTIME_DIR/$NAME"
mkdir "$XDG_RUNTIME_DIR/$NAME" 2>/dev/null

PIDFILE="$RUNDIR/$NAME.pid"
PGIDFILE="$RUNDIR/$NAME.pgid"

function detach {
    
    gdb --batch-silent -p $1 -ex "call close(0)" \
                             -ex "call close(1)" \
                             -ex "call close(2)" 2>/dev/null
    }    

case $1 in

    'start')
    
        [[ "$2" = /* ]] && PRG="$2" || PRG="$(pwd)/$2"
        SCRIPT="cd / && umask 0 && $PRG"
        setsid `bash -c "$SCRIPT" & printf "%i" $! > $PIDFILE && printf "%i" $$ > $PGIDFILE` &
        while [ ! -f "$PGIDFILE" -o ! -f "$PIDFILE" ]; do sleep 0.01; done;
        detach $(cat $PIDFILE)
        kill -15 $!

    ;;

    'stop')

      [ -f $PGIDFILE ] && {
                           pkill -g $(cat $PGIDFILE)
                           [ ! $? ] && printf "No process matched PGID $(cat $PGIDFILE)!\n" 1>&2 \
                                    || printf "Processes in PGID $(cat $PGIDFILE) have been killed.\n"
                           rm "$PGIDFILE"
                          } || printf "No PGID file.\n" 1>&2
                         
      [ -f $PIDFILE ] && rm "$PIDFILE"
                         
      [ -d $RUNDIR ] && rmdir "$RUNDIR"
                  
    ;;

    'status')

        [ ! -f $PIDFILE ] && printf "$PIDFILE does not exist.\n"
        [ -f $PGIDFILE ] && pgrep -g $(cat $PGIDFILE) | xargs ps -o "%U %p %P %r %a"

    ;;

    'attach')
    
        [ ! -f $PIDFILE ] && { printf "$PIDFILE does not exist.\n" 1>&2 && exit 10; }
        GDBCMDOUT="call open(\"/proc/$$/fd/1\",1)"
        GDBCMDERR="call open(\"/proc/$$/fd/2\",2)"
        gdb --batch-silent -p $(cat $PIDFILE) -ex "call close(0)" \
                                              -ex "call close(1)" \
                                              -ex "call close(2)" \
                                              -ex "call open(\"/dev/null\", 0)" \
                                              -ex "$GDBCMDOUT" \
                                              -ex "$GDBCMDERR" 2>/dev/null

    ;;

    'detach')
    
        [ ! -f $PIDFILE ] && { printf "$PIDFILE does not exist.\n" 1>&2 && exit 10; }
        detach $(cat $PIDFILE)
    
esac








